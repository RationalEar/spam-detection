version: '3.8'

services:
  app:
    build:
      context: . # Build from the current directory
      dockerfile: Dockerfile # Use the Dockerfile we just created
    ports:
      - "8888:8888" # Map host port 8888 to container port 8888 for Jupyter
    volumes:
      - .:/app # Mount your local project directory into the container
      - D:\\projects\\spam-detection-data:/data # Mount the data directory
    command: jupyter # Default command to start Jupyter Lab
    # For production, you'd add environment variables for authentication
    # environment:
    #   JUPYTER_TOKEN: your_secret_token

  spam-detection-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DEBUG=false
      - LOG_LEVEL=INFO
      - ENABLE_BERT=true
      - ENABLE_BILSTM=true
      - ENABLE_CNN=true
      - MAX_SEQUENCE_LENGTH=512
      - ENSEMBLE_THRESHOLD=0.5
    volumes:
      # Mount models directory to persist trained models
      - ./models:/app/models
      # Mount logs directory for persistent logging
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - spam-detection-api
    restart: unless-stopped
    profiles:
      - production

volumes:
  models:
  logs:
